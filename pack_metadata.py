import tensorflow as tf
import pack_temp
from tflite_support.metadata_writers import writer_utils
from tflite_support.metadata_writers import metadata_info

from tensorflow_lite_support.metadata import metadata_schema_py_generated as _metadata_fb



_MODEL_PATH = "tflite/objectdetect.tflite"
model_buffer = writer_utils.load_file(_MODEL_PATH)



input_md = metadata_info.InputImageTensorMd(
    name="image",
    description="Input image to be detected.",
    norm_mean = [127.5],
    norm_std = [127.5],
    color_space_type = _metadata_fb.ColorSpaceType.RGB,
    tensor_type=writer_utils.get_input_tensor_types(model_buffer)[0]
)

output_category_md = metadata_info.CategoryTensorMd(
    name="category",
    description="The categories of the detected boxes.",
    label_files=[metadata_info.LabelFileMd(file_path="tflite/objectdetect.txt")]
)

output_score_md = metadata_info.ClassificationTensorMd(
    name="score",
    description="The scores of the detected boxes.",
    score_calibration_md=None,
    tensor_name='score'
)

output_location_md = metadata_info.TensorMd(
    name="location",
    description="The locations of the detected boxes.",
    tensor_name='location'
)

ObjectDetectorWriter = pack_temp.MetadataWriter
writer = ObjectDetectorWriter.create_from_metadata_info(
    model_buffer,
    input_md=input_md,
    output_category_md=output_category_md,
    output_score_md=output_score_md,
    output_location_md=output_location_md
)

# Verify the metadata generated by metadata writer.
print(writer.get_metadata_json())

_SAVE_TO_PATH = "tflite/objectdetect_metadata.tflite"
writer_utils.save_file(writer.populate(), _SAVE_TO_PATH)

